When would you want to use a remote repository rather than keeping all your work
local?
    使用远程仓库，可以在不同计算机上传递仓库，提交commit，并允许管理不同开发者来共同合作同一项
    目。

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?
    因为pull和push针对的是branch。当我不需要一个远程branch的时候，我并不需要它随时和本地的
    Git保持同步，只在需要时pull即可。

Describe the differences between forks, clones, and branches. When would you use
one instead of another?
    forks    -  从其它用户的GitHub的一个仓库克隆一份到自己的仓库
    clones   -  从自己的GitHub仓库克隆一份到本地计算机，或在本地计算机上制作一个仓库的克隆
    branches -  一个仓库中的commits分支
    当我想获取某个其它用户公开仓库的拷贝时，不需要先clone到本地，再push到GitHub，只需从
    GitHub直接使用fork功能即可。

What is the benefit of having a copy of the last known state of the remote
stored locally?
    始终保持本地和远程同步，保证本地内容是最新的。同时，若要进行任何修改，在本地修改后再
    push即可。

How would you collaborate without using Git or GitHub? What would be easier,
and what would be harder?
    如果没有git，我可能会将文件分发到各合作者的邮箱中。每个人将会把修改的文件传回给我，
    但是他们在修改文件的时候不一定会遵循git的commit规则，不一定保存过程文档。我在合并
    各作者的文件时，可能会出现大量的冲突和bug，需要花费非常多的时间来进行文档管理和版本
    控制。因此使用Git和GitHub将极大提升工作效率。

When would you want to make changes in a separate branch rather than directly
in master? What benefits does each approach have?
    如果是自己的项目，需要试验新功能的时候，可以创建一个分支，在分支上进行试验。
    如果是合作他人项目，你需要fork到自己的GitHub，这时可以创建一个分支，在分支上进行修改，
    再向合作人发起pull request。
